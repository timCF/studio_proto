package lemooor.studio;

//
//	commons enums
//

enum BandKind {
	BK_default = 1;
	BK_base = 2;
	BK_cover = 3;
	BK_education = 4;
}

enum WeekDay {
	WD_default = 1;
	WD_1 = 2;
	WD_2 = 3;
	WD_3 = 4;
	WD_4 = 5;
	WD_5 = 6;
	WD_6 = 7;
	WD_7 = 8;
}

enum TransactionKind {
	TK_band_room = 1;
	TK_band_instrument = 2;
	TK_band_deposit = 3;
	TK_band_punishment = 4;
	TK_wage_base = 5;
	TK_wage_bonus = 6;
	TK_wage_punishment = 7;
	TK_rent = 8;
	TK_buy = 9;
	TK_repair = 10;
	TK_sell = 11;
}

message Contacts {
	repeated string phones = 1;
	repeated string mails = 2;
	repeated string social = 3;
	repeated string other = 4;
}


//
// SUPERADMIN LEVEL
//

message Admin {
	optional uint64 id = 1;
	required string name = 2;
	required Contacts contacts = 3;
	required string login = 4;
	required string password = 5;
	required bool enabled = 6;
	optional uint64 stamp = 7;
}

message Location {
	optional uint64 id = 1;
	required string name = 2;
	required string description = 3;
	required bool enabled = 4;
	optional uint64 stamp = 5;
}

message Room {
	optional uint64 id = 1;
	required string name = 2;
	required uint64 location_id = 3;
	required string color = 4;
	required string description = 5;
	required uint64 price_base = 6;
	required bool enabled = 7;
	optional uint64 stamp = 8;
}

message DiscountConst {
	optional uint64 id = 1;
	required uint64 room_id = 2;
	required BandKind band_kind = 3;
	required uint32 number_from = 4;
	required uint32 min_from = 5;
	required WeekDay week_day = 6;
	required uint64 amount = 7;
	required bool fixprice = 8;
	optional uint64 stamp = 9;
}

message Instrument {
	optional uint64 id = 1;
	required string name = 2;
	required uint64 location_id = 3;
	required string description = 4;
	required uint64 price = 5;
	required bool enabled = 6;
	optional uint64 stamp = 7;
}

//
//	SUPER ADMIN + ADMIN LEVEL
//

message Stuff2Sell {
	optional uint64 id = 1;
	required string name = 2;
	required uint64 location_id = 3;
	required string description = 4;
	required uint64 quantity = 5;
	required uint64 price = 6;
	required bool enabled = 7;
	optional uint64 stamp = 8;
}

message Transaction {
	optional uint64 id = 1;
	required TransactionKind kind = 2;
	required uint64 subject_id = 3;
	required uint64 subject_quantity = 4;
	required uint64 amount = 5;
	required uint64 cash_in = 6;
	required uint64 cash_out = 7;
	required string description = 8;
	required uint64 admin_id = 9;
	optional uint64 stamp = 10;
}

//
//	ADMIN level
//

message Band {
	optional uint64 id = 1;
	required string name = 2;
	required string person = 3;
	required Contacts contacts = 4;
	required BandKind kind = 5;
	required string description = 6;
	required int64 balance = 7;
	required uint64 admin_id = 8;
	required bool can_order = 9;
	required bool enabled = 10;
	optional uint64 stamp = 11;
}

enum SessionStatus {
	SS_awaiting_last = 1;
	SS_awaiting_first = 2;
	SS_closed_auto = 3;
	SS_closed_ok = 4;
	SS_canceled_soft = 5;
	SS_canceled_hard = 6;
}

enum SessionOrderedBy {
	SO_auto = 1;
	SO_admin = 2;
	SO_self = 3;
}

message Session {
	optional uint64 id = 1;
	required uint64 time_from = 2;
	required uint64 time_to = 3;
	required WeekDay week_day = 4;
	required uint64 room_id = 5;
	repeated uint64 instruments_ids = 6;
	required uint64 band_id = 7;
	required bool callback = 8;
	required SessionStatus status = 9;
	required uint64 amount = 10;
	required string description = 11;
	required SessionOrderedBy ordered_by = 12;
	required uint64 admin_id_open = 13;
	required uint64 admin_id_close = 14;
	required uint64 transaction_id = 15;
	optional uint64 stamp = 16;
	// if admin want custom price ( not auto calculated )
	optional uint64 price = 17;
}

message SessionTemplate {
	optional uint64 id = 1;
	required uint32 min_from = 2;
	required uint32 min_to = 3;
	required WeekDay week_day = 4;
	required uint64 room_id = 5;
	repeated uint64 instruments_ids = 6;
	required uint64 band_id = 7;
	required string description = 8;
	required uint64 admin_id = 9;
	required bool enabled = 10;
	optional uint64 stamp = 11;
}

//
//	html request - response
//


enum CMD {
	CMD_get_state = 1;
	CMD_ping = 2;
	CMD_new_session = 3;
	CMD_edit_session = 4;
	CMD_band_new_edit = 5;
	CMD_band_disable = 6;
	CMD_week_template_new_edit = 7;
	CMD_week_template_disable = 8;
	CMD_week_template_new_edit_from_session = 9;
}

enum ClientKind {
	CK_superadmin = 1;
	CK_admin = 2;
	CK_observer = 3;
}

message FullState {
	required string hash = 1;
	repeated Admin admins = 2;
	repeated Location locations = 3;
	repeated Room rooms = 4;
	repeated DiscountConst discount_const = 5;
	repeated Instrument instruments = 6;
	repeated Stuff2Sell stuff2sell = 7;
	repeated Transaction transactions = 8;
	repeated Band bands = 9;
	repeated Session sessions = 10;
	repeated SessionTemplate sessions_template = 11;
}

enum ResponseStatus {
	RS_ok_state = 1;
	RS_ok_void = 2;
	RS_error = 3;
	RS_notice = 4; // NOTE : this status has side-effect ( close popups )
	RS_refresh = 5;
	RS_info = 6;
	RS_warn = 7;
}

// full generic request struct
message Request {
	required CMD cmd = 1;
	required ClientKind client_kind = 2;
	required string login = 3;
	required string password = 4;
	optional FullState subject = 5;
}

// full generic response struct
message Response {
	required ResponseStatus status = 1;
	required string message = 2;
	required FullState state = 3;
}
